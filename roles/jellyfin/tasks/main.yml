---
- name: Start jellyfin
  block:
    - name: Create Jellyfin Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ jellyfin_config_directory }}"

    - name: Detect GPU type
      ansible.builtin.shell: |
        if command -v nvidia-smi &> /dev/null && nvidia-smi -L 2>/dev/null | grep -q "GPU"; then
          echo "nvidia"
        elif [ -d "/sys/class/drm/renderD128" ] && grep -q "amdgpu" /sys/kernel/debug/dri/*/name 2>/dev/null; then
          echo "amd"
        elif [ -d "/sys/class/drm/renderD128" ] || lspci | grep -i "VGA.*Intel" > /dev/null; then
          echo "intel"
        else
          echo "none"
        fi
      register: gpu_detection
      changed_when: false
      check_mode: no

    - name: Set GPU type fact
      ansible.builtin.set_fact:
        jellyfin_gpu_type: "{{ gpu_detection.stdout }}"

    - name: Display detected GPU type
      ansible.builtin.debug:
        msg: "Detected GPU type: {{ jellyfin_gpu_type }}"

    - name: Add Jellyfin user to appropriate groups for hardware transcoding
      ansible.builtin.user:
        name: "ansible-nas"
        groups: "{{ jellyfin_gpu_groups[jellyfin_gpu_type] | default('video') }}"
        append: yes
      when:
        - jellyfin_hardware_transcoding | default(false) is true
        - jellyfin_gpu_groups[jellyfin_gpu_type] | default('') != ''

    - name: Remove Jellyfin user from GPU groups when hardware transcoding is disabled
      ansible.builtin.user:
        name: "ansible-nas"
        groups: "{{ jellyfin_gpu_groups[jellyfin_gpu_type] | default('video') }}"
        append: no
      when:
        - not jellyfin_hardware_transcoding | default(false)
        - jellyfin_gpu_groups[jellyfin_gpu_type] | default('') != ''

    - name: Jellyfin Docker Container
      community.docker.docker_container:
        name: "{{ jellyfin_container_name }}"
        image: "{{ jellyfin_image_name }}:{{ jellyfin_image_version }}"
        pull: true
        volumes:
          - "{{ jellyfin_config_directory }}:/config:rw"
          - "{{ jellyfin_movies_directory }}:/movies:{{ jellyfin_movies_permissions }}"
          - "{{ jellyfin_music_directory }}:/music:{{ jellyfin_music_permissions }}"
          - "{{ jellyfin_photos_directory }}:/photos:{{ jellyfin_photos_permissions }}"
          - "{{ jellyfin_tv_directory }}:/tv:{{ jellyfin_tv_permissions }}"
          - "{{ jellyfin_books_directory }}:/books:{{ jellyfin_books_permissions }}"
          - "{{ jellyfin_audiobooks_directory }}:/audiobooks:{{ jellyfin_audiobooks_permissions }}"
        ports:
          - "{{ jellyfin_port }}:8096"
        devices: "{{ (jellyfin_hardware_transcoding and jellyfin_gpu_type != 'none') | ternary(jellyfin_gpu_devices[jellyfin_gpu_type] | default([]), []) }}"
        runtime: "{{ (jellyfin_hardware_transcoding and jellyfin_gpu_type == 'nvidia') | ternary(jellyfin_nvidia_runtime, omit) }}"
        device_requests: "{{ (jellyfin_hardware_transcoding and jellyfin_gpu_type == 'nvidia') | ternary(jellyfin_nvidia_device_requests, omit) }}"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          UID: "{{ jellyfin_user_id }}"
          GID: "{{ jellyfin_group_id }}"
        restart_policy: unless-stopped
        memory: "{{ jellyfin_memory }}"
        labels:
          traefik.enable: "{{ jellyfin_available_externally | string }}"
          traefik.http.routers.jellyfin.rule: "Host(`{{ jellyfin_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.jellyfin.tls.certresolver: "letsencrypt"
          traefik.http.routers.jellyfin.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.jellyfin.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.jellyfin.loadbalancer.server.port: "8096"
          homepage.group: Media
          homepage.name: Jellyfin
          homepage.icon: jellyfin.png
          homepage.href: "{% if jellyfin_available_externally %}https://{{ jellyfin_hostname }}.{{ ansible_nas_domain }}{% else %}http://{{ ansible_nas_hostname }}:{{ jellyfin_port }}{% endif %}"
          homepage.description: Media server
          homepage.widget.type: jellyfin
          homepage.widget.url: "{% if jellyfin_available_externally %}https://{{ jellyfin_hostname }}.{{ ansible_nas_domain }}{% else %}http://{{ ansible_nas_hostname }}:{{ jellyfin_port }}{% endif %}"
          homepage.widget.enableBlocks: "true"
          homepage.widget.enableNowPlaying: "true"
  when: jellyfin_enabled is true

- name: Stop jellyfin
  block:
    - name: Stop jellyfin
      community.docker.docker_container:
        name: "{{ jellyfin_container_name }}"
        state: absent
    - name: Remove Jellyfin user from GPU groups
      ansible.builtin.user:
        name: "ansible-nas"
        groups: "{{ jellyfin_gpu_groups[jellyfin_gpu_type] | default('video') }}"
        append: no
      when: jellyfin_gpu_groups[jellyfin_gpu_type] | default('') != ''
  when: jellyfin_enabled is false
